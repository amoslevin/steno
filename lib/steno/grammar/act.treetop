grammar Act
  rule act
    preamble
    part+ <Act>
  end

  rule preamble
    frontmatter*
    preamble_heading
    naked_statement+ <Preamble>
  end

  rule frontmatter
    !(preamble_heading) content eol <Frontmatter>
  end

  rule part
    part_heading?
    chapter+ <Part>
  end

  rule part_heading
    space? part_heading_prefix eol? space? content eol <PartHeading>
  end

  rule chapter
    chapter_heading?
    section+ <Chapter>
  end

  rule chapter_heading
    space? chapter_heading_prefix eol? space? content eol <ChapterHeading>
  end

  rule section
    section_title subsection+ <Section>
  end

  rule section_title
    space? section_title_prefix space content eol
  end

  rule subsection
    (numbered_statement / naked_statement)
    blocklist? <Subsection>
  end

  rule numbered_statement
    space? numbered_statement_prefix space? content eol <NumberedStatement>
  end

  rule naked_statement
    space? !(part_heading_prefix / chapter_heading_prefix / section_title_prefix / numbered_statement_prefix) content eol <NakedStatement>
  end

  ##########
  # prefixes

  rule preamble_heading
    'ACT' newline
  end

  rule part_heading_prefix
    'PART' space alphanums
  end

  rule chapter_heading_prefix
    'CHAPTER' space alphanums
  end

  rule section_title_prefix
    number_letter '.'
  end

  rule numbered_statement_prefix
    '(' number_letter ')'
  end

  ##########
  # definitions section

  rule definitions_section
    section_title
    space? content eol
    definition+ <DefinitionsSection>
  end

  rule definition
    space? quotes non_quotes+ quotes content eol
    (blocklist / definition_statement)* <Definition>
  end

  rule definition_statement
    space? !(quotes) content eol <DefinitionStatement>
  end

  ##########
  # blocklists

  rule blocklist
    blocklist_item+ <Blocklist>
  end

  rule blocklist_item
    space? '(' letter_ordinal ')' space content eol <BlocklistItem>
  end

  rule letter_ordinal
    letter (letter / digit)*
  end

  #########
  ## one line of basic content

  rule content
    # anything but a newline, followed by a
    # newline or end of file (without consuming the newline)
    [^\n]+ &eol
  end

  ##########
  # terminals

  # eg. 2, 2A, 2b
  rule number_letter
    number letter*
  end

  rule number
    digit+
  end

  rule digit
    [0-9]
  end

  rule letter
    [a-zA-Z]
  end

  rule alphanums
    [a-zA-Z0-9]+
  end

  rule quotes
    ["“”]
  end
  
  rule non_quotes
    [^"“”]
  end

  ##########
  # whitespace

  rule space
    [ \t]+
  end

  rule eol
    newline / end_of_file
  end

  rule newline
    "\n"
  end

  ##########
  # end of file

  rule end_of_file
    !.
  end
end
